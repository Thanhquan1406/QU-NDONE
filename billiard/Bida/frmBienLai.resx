<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADUAAAA1CAYAAADh5qNwAAAABGdBTUEAALGPC/xhBQAABChJREFUaEPt
        mmuoFVUYQK+ZPexhWYZB9ICKKAoJkSQqCynCIqVAIbJ3P8o0kiJIKSMkelCEEREpRI8fRWgJqWTgjzAp
        UHqrhJWVSRZp9C5trYsfDJdz5s6es0eNZsFCz/bMN/s7M7P3t/fY19LS0tKSmVF4Ed6Ad+EcvBtvwok4
        Gv8TjMcncD3uxF0l+u+f41N4Pg7BfYb9cBquw06dr+rHeB0Oxb3KWHwPi537E9/Ce9Db7AQ8GL0S/nk8
        elt6Sy7D37F4/Ad4Lu5x7OC9aALRmW/RRI7BFI7CO/ErjFh/43zcY1ftIHwVowP+0vfjcOyFA9Ef5ReM
        2G/iodgoJuStFSf9FM/EnJyKazHO8Q4eho3ggPAaxslW4ghMZSRegif3f+rMIfgGxrlW4P6YnfswTuLV
        8qqlcjFuR2P8g3OxG8NwCcY5H8OsnIN/ocEdeg/HVLw6v2J0Uk3sROyGo2WMrn7X0TQLjkAxB9mpMzCV
        TgmFF2AZJ2Fc3Q14APbMtRgdcBhPpSyh77HKIDAD45jbbegF56NP0GDOI6nPUVlCP+N5WAUHic/Q477c
        /bk2F2J04g4bEihLaAdWTSiwMI7jr7ChLs+gQX7DI22oSO6ExEHjJzTGyzbUJUoX54yq5LrlOvEiGudH
        rFVCWYhGZ2baUIEmrlARq/iId5YNqVyOEcB10mA0nZA4nUTMq21IxasTAY62oQQrhaZuuSIWvU7CxnUl
        ncwD6MEuL8pWpc4z3uPFRMJcV6jID2hsV9jJPIwe7C9dhiVUMZGiTty5cd1m7Kf7PyXyIHrwH/2fuuMG
        y8DVa7gZT8GcWIUY+8n+T4m4Go3ODbbEuAXjXh9ozsSsJKKwdmGazJUYHTvbhkG4FZtOzDVYxLTCSOY0
        jAA321CBphObihFvnA2pOOLF/ZtSljSZWJRt7mPUXoK8hAax5rL2qkoTifk8bUFjLLWhLpMxOpM6POdO
        bArG8dNtqIv7BF+jgT5EN19SyJnYavQ4J99et+P6ZmN05EYbEilLbCNWeTauwjjGSqdnfJZcbRpwGx6L
        qZQlNtgWs1tqcbdsxTrbch1xpRlvMd7GOsvpTokZ83Tshrf76xjfvwaz8hxGcP9eVuR2w8TcJ484z2MZ
        Fq3x3VdsyI234RqMkzyLdVafY3AWTsJuP4ztj2Ocy0Gqzl5jJSxeY3dJl+9uy8kRuBjjHL6YOw4bxVc1
        72Oc1AnR8iUHPrvFVzofYeMJBc4TL2DxFei7aKdSb0kHg0txFUYs9WVEtpEuBV+LfofFznyDC9BqpNuv
        7LRwGfrcxHQROm3UqsBz4gM8D2OZPVCLzy/QHdZN6Eq60/fcL38InZf2GXyndD06eHRbCQ/UVbXvuVxk
        Nja65cJnzv9GcBs+ggvRZ3ARPopu8k/Axl99trS0tPxf6Ov7F1IN0dRHu6d2AAAAAElFTkSuQmCC
</value>
  </data>
</root>